### arch-anywhere-italian.conf
### By: LordBlacksun (charlieben94@gmail.com)
###
### This is the language file for Arch Linux Anywhere.
### This file is sourced at the beginning of the install based of the language you select
### If you would like to help out in translating this file into your language you can eaisly do so by changing the variables
###
### Enter the name of the translator "By:" and any notes you would like to include in above comments
### Please save your finished translation in the following format:
###
### arch-installer-<italian>.conf
###
### You may send any completed translations to the developer for it to be included in the next release:
###
### deadhead3492@gmail.com
###
### First change this variable to the correct utf-8 locale for your language.
### Example: en_GB.UTF-8, pt_PT.UTF-8, ru_RU.UTF-8, ro_RO.UTF-8

LANG="it_IT.UTF-8"

### Important: Please be sure you are using UTF-8 encoding before beinging the translation!
### Do not change the variable names for example intro_msg=
### Do not remove any occurrence of \n or \n\n this tells program to create a new line and should not be changed
### Do not remove any special characters such as *, or quotes.
### Do not edit the names of the functions example main_msg() or remove any function brackets: { }
### Do not edit any varibles within the text for example: /dev/$DRIVE and: $user
###
### You may translate any full words contained between the quotes ""
### Translations begin here:

main_msg() {

error="\Z1Error:\Zn"

yes="Si"

no="No"

ok="Ok"

cancel="Cancella"

other="Other"

default="Default"

edit="Modifica"

back="Indietro"

done_msg="Completato"

partition="Partitione"

size="Grandezza"

add="Aggiungi"

install="Installa"

mountpoint="Punto di montaggio"

custom="Custom"

write="Scrivi modifiche"

none="Nessuno"

select="Seleziona"

custom_msg="Inserisci un nuovo punto di montaggio: \n\n $a Sarà montato come root '/'"

custom_err_msg0="\n$error Il nuovo punto di montaggio non può contenere caratteri speciali ..."

custom_err_msg1="\n$error Il nuovo punto di montaggio, non può essere il punto di montaggio per root '/'"

write_confirm="Scrivi modifiche su disco?"

intro_msg="Benvenuto al  Arch Linux Anywhere installer! \n\n $a Desidera incominciare il processo di installazione?"

wifi_msg0=" Interfaccia wifi rilevata, desiderà connetersi a una rete?"

wifi_msg1="Impossibile connetersi a rete wifi, termino l'installazione."

connect_err0="$error Nessuna connessione internet rilevata, termino l'installazione."

connect_err1=$(echo -e "\n ${Red}$error ${Yellow}Deve essere connesso ad internet per installare Arch Linux.\n si prega di controllare la connessione e riprovare.\n\n Show connection info: \n\n    ${Green}ip add \n    ip link \n    wifi-menu ${ColorOff}\n\n")

locale_msg="Prego selezionare la locale desiderata:"

zone_msg0="Prego selezionare il suo fuso orario:"

zone_msg1="Prego inserire la sua zona oraria (esemipio: Rome,London):"

keys_msg="Selezione il proprio layout per la tastiera : \n\n $a se insicuri lasciare la selezione di default"

drive_msg="Partizionamento automatico del disco:\n $a Selezionare disco sul quale installare Arch Linux \n $a ATTENZIONE: Il disco selezionato verrà formattato"

part_msg="Selezionare il metodo di partizione preferito \n\n $a ATTENZIONE il partizionamento automatico formatterà il disco selezionato \n $a Premere cancella per tornare alla selezione del disco"

menu_msg="Torna al menu precedente"

fs_msg="Selezionare il tipo di filesystem desiderato: \n\n $a  Il default è EXT4"

swap_msg0="Desiderà creare spazio SWAP? \n\n $a (Sono consigliati 512M - 1024M  di spazio su disco)"

swap_msg1="Specificare la grandezza dello spazio swap: \n\n $a (Allineare  'M' per MiB o 'G' per GiB):"

swap_err_msg0="$Spazio su disco insufficiente!"

swap_err_msg1="$errore swap deve terminare in 'M' per MiB o 'G' per GiB"

swap_err_msg2="\n$ Errore durante l'attivazione della swap, prova  a formattare prima. \n\n $a Ritorno al menu di partizione..."

efi_msg0="vuole attivare UEFI bios? \n\n $a Potrebbere non funzionare su alcuni sistemi \n $a attivare con cautela"

gpt_msg="Vuole usare partionamento GPT? \n\n $a ( Tavola di partizione GUID )"

install_type_msg="Selezionare il tipo di sistema che si vuole installare: \n\n $a Se insicuri scegliere 'Base' or 'Base-devel'"

passwd_msg0="$errore deve inserire una password."

passwd_msg1="Le password non corrispondono, si prega di riprovare..."

part_err_msg="Un errore è stato rilevato durante il  partizionamento \n\n $a Ritorno al menu di partizione"

part_err_msg1="Errore di operazione su disco. ( fallimento mount/umount ) \n\n Torno al menu..."

part_err_msg2="\n$error failimento nel montare dispositivo \n\n Torno al menu di partizione..."

manual_part_msg="Partizione guidata manuale: \n $a Selezionare un disco per modificare lo schema di partizione \n $a Selezionare per modficare il punto di montaggio \n $a Selezionare 'Completato' quando si ha terminato"

root_err_msg="$errore partizione troppo piccola per essere partizione di Root. \n\n $a La partizione Root deve essere grande almeno 4 GB"

root_err_msg1="$errore deve m selezionare una partizione root prima di continuare con l'installazione."

write_confirm_msg="Conferma di voler scrivere le modifiche su disco:"

return_msg="\n ${Yellow}Hai aperto una nuova sessione dalla linea di comando.\n Ciò ti permette di lanciare comandi personalizzati dall'installatore.\n\n L'installatore Arch Anywhere  sta ancora lavorando in background\n Ritorna all'installatore dove lo hai lasciato con il comando: \n    ${Green}arch-anywhere\n    exit\n${ColorOff}"

arch_chroot_msg="\n ${Yellow}Hai aperto una nuova sessione di arch-anywhere-chroot.\n Ciò ti permettere di lanciare comandi sul sistema che hai appena installato.\n\n Attenzione: Questo non è uno emulatore di terminale standard.\n Comandi lanciati qui vengono mandati al sistema appena installato  \n To show this message again type: ${Green}help \n ${Yellow}You may install or search packages with the commands:\n\n    ${Green}pacman -S <install package(s) here>\n    pacman -Ss <search-package-here>\n\n ${Yellow}You may edit text files with nano or vim editors: \n\n    ${Green}nano /path/to/file\n    vim /path/to/file\n\n ${Yellow}The Arch Anywhere installer is still running in the background.\n Return to the installer with the command:\n\n    ${Green}arch-anywhere\n    exit\n${ColorOff}"

mirror_msg1="Please select your country code:"

wifi_option_msg="Install wireless utilites? Provides wifi support. \n\n $a Necessary for connecting to wifi \n $a Select yes if using wifi" 

wifi_util_msg="Select your desired network utility: \n\n $a Default is netctl (select networkmanager for GUI)"

net_util_msg0="Netctl network utility (wifi-menu)"

net_util_msg1="NetworkManager Utility (nmcli)"

pppoe_msg="Include support for PPPoE DSL connections? \n\n $a Select yes if using PPPoE \n $a If unsure select No"

base_msg0="Base package group"

base_msg1="Base development group"

grsec_msg="GrSecurity hardened kernel"

LTS_msg0="Long term support kernel"

LTS_msg1="Long term support dev kernel"

os_prober_msg="Install os-prober? \n\n $a Required for multiboot \n $a If dualbooting select yes"

grub_warn_msg0="Warning! System will not be bootable! \n\n $a You will need to configure a boot loader yourself \n $a Continue without a boot loader?"

grub_warn_msg1="After install is complete choose not to reboot, you may choose to keep the system mounted at /mnt allowing you to arch-chroot into it and configure your own boot loader."

exit_msg="Ready to install system \n\n $a Are you sure you want to exit to menu?"

install_err_msg0="$error root filesystem already installed \n\n $a Continuing to menu."

install_err_msg1="$error no filesystem mounted \n\n $a Return to drive partitioning?"

install_err_msg2="$error no filesystem mounted \n\n $a Continuing to menu"

multilib_msg="64-bit architecture detected.\n\n $a Add multilib repos to pacman.conf? \n   (Allows installing 32-bit software on 64-bit system)"

dhcp_msg="Enable DHCP at boot? (Recommended)\n\n $a Dynamic Host Control Protocol \n   (Automatic IP address configuration)"

host_msg="Set your system hostname:\n\n $a Computer/host name \n $a No spaces or special characters"

host_err_msg="$error hostname must begin with letter and can't contain special characters. \n\n $a Please try again."

root_passwd_msg0="\nPlease enter a new root login password \n\n $a Password for root account login:"

root_passwd_msg1="\nEnter new root password again \n\n $a Root password again:"

user_exists_msg="Would you like to add a new user account? \n\n $a Select 'yes' to add a new user."

user_msg0="Create a new user account? \n\n $a (Recommended) Create a user now."

user_msg1="Set username: \n\n $a Lowercase letters and numbers only \n $a No capital letters or special characters"

user_err_msg="$error username must begin with letter and cannot contain special characters or upercase letters. \n\n $a Please try again..."

graphics_msg="Select your desired graphics driver: \n\n $a If unsure use mesa-libgl or default"

desktop_cancel_msg="Are you sure you dont want a desktop? \n\n $a You will be booted into command line only."

nvidia_msg="Select your desired Nvidia driver: \n\n $a Cancel if none"

touchpad_msg="Would you like to install xf86-input-synaptics?  \n\n $a Required for laptop touchpad support."

desktop_msg="Would you like to install a desktop or window manager? \n\n $a Select 'yes' to install a desktop enviornment"

lightdm_msg="Would you like to install LightDM display manager? \n\n $a Graphical login manager"

environment_msg="Select your desired enviornment:"

startx_msg="Xinitrc file created. \n\n $a After login use the command 'startx' to access your desktop."

extra_msg0="Install xfce4 goodies? \n\n $a XFCE4 Extra programs"

extra_msg1="Install gnome extras? \n\n $a Gnome Extra programs"

extra_msg2="Install mate extras? \n\n $a Mate Extra programs"

extra_msg3="\n $a Install minimal plasma desktop?"

extra_msg4="Install deepin extras? \n\n $a Deepin Extra programs"

extra_msg5="Install xmonad-contrib? \n\n $a xmonad Extra programs"

extra_msg6="Install gnome group? \n\n $a gnome group programs"

gtk3_msg0="Install lxde gtk3? \n\n $a (experimental version)"

software_msg0="Would you like to install some common software? \n\n $a Select yes for a list of additional software"

software_msg1="Choose your desired software: \n $a Use spacebar to check/uncheck software \n $a Press enter when finished"

software_type_msg="Select your desired software type \n\n $a Press 'install' when finished selecting software"

software_warn_msg="Are you sure you want to continue without any extra software? \n\n $a Press yes to continue without software."

software_noconfirm_msg="Are you sure you don't want any software from:"

complete_no_boot_msg="Install process complete! \n\n $a You did not configure a boot loader \n $a Return to the command line to configure?"

not_complete_msg="Install not complete, are you sure you want to reboot?"

complete_msg="Install completed successfully. \n\n $a What would you like to do now?"

part_frmt_msg="Would you like to format the selected partition? \n\n $a Select 'yes' to format partition. \n $a Select 'no' to mount without formating."

swap_frmt_msg="Would you like to format the swap space? \n\n $a Select yes to format new swap space. \n $a No to enable without formatting."

vbox_msg="VirtualBox guest install detected \n\n $a Installer will provide virtualbox-guest-utils."

bluetooth_msg="Bluetooth support detected. \n\n $a Would you like to install bluez and bluez-utils? \n $a Required for bluetooth."

blueman_msg="Would you like to install blueman bluetooth manager? \n\n $a Select 'yes' to install graphical bluetooth manager."

btenable_msg="Enabling bluetooth..."

nwmanager_msg0="Enabling NetworkManager..."

nwmanager_msg1="Enabling netctl..."

vbox_enable_msg="Enabling virtualbox guest utils..."

efi_man_msg="EFI partition detected. \n\n $a Would you like to enable EFI boot?"

efi_err_msg="$error A mountpoint has already been created at '/boot' \n\n Please unmount and mount EFI partition as boot."

efi_err_msg1="$error Multiple EFI partitions found but not mounted. \n\n Please mount EFI partition at '/boot' and try again."

vfat_msg="EFI system partition detected. \n\n $a Vfat required to create bootable EFI partition."

loader_type_msg="Select your desired bootloader: \n\n $a Default is grub"

loader_msg="GRand Unified Bootloader"

loader_msg1="SysLinux Bootloader"

esp_warn_msg="Warning: Syslinux does not support booting the kernel outside the esp. \n\n $a Kernel and initramfs will need to be copied to /boot/efi after updates"

failed_msg="$error Failed to install packages to new root. \n\n $a Please check the file '/tmp/arch-anywhere.log' for more info."

shell_msg="Select your desired command shell \n\n * Default is bash"

}

load_msg() {

wait_load="\n Please wait..."

connection_load="Please wait while we test your connection..."

boot_load="Creating boot partition..."

swap_load="Creating swap space..."

frmt_load="Formatting..."

mnt_load="Mounting..."

pv_load="Creating physical volumes"

lv_load="Creating logical volumes"

encrypt_load="Encrypting drive..."

mirror_load0="Retrieving new mirror list..."

mirror_load1="Please wait while ranking mirrors..."

efi_load1="Configuring efi boot..."

grub_load1="Installing grub to drive..."

grub_load2="Configuring grub..."

syslinux_load="Installing syslinux to drive..."

uefi_config_load="Please wait while configuring kernel for uEFI..."

f2fs_config_load="Please wait while configuring kernel for F2FS..."

encrypt_load1="Please wait while configuring kernel for encryption..."

dhcp_load="Enabling DHCP..."

dm_load="Enabling lightdm..."

pacman_load="Please wait while we update your pacman databases..."

}

part_msg() {

method0="Auto Partition Drive"

method1="Auto partition encrypted LVM"

method2="Manual Partition Drive"

}

fs_msg() {

fs0="4th extended file system"

fs1="3rd extended file system"

fs2="2nd extended file system"

fs3="B-Tree File System"

fs4="Journaled File System"

fs5="Reiser File System"

fs6="F2FS File System"

fs7="VFAT/FAT32 File System"

}

graphics_msg() {

gr0="Auto Detect Drivers"

gr1="Mesa OpenSource Drivers"

gr2="NVIDIA Graphics Drivers"

gr4="AMD/ATI Graphics Drivers"

gr5="Intel Graphics Drivers"

gr6="Latest stable nvidia drivers"

gr7="Legacy 340xx drivers branch"

gr8="Legaxy 304xx drivers branch"

}

menu_msg() {

menu="Menu Items: \n\n $a Start a 'Command Line Session' to run custom commands\n $a Return to installer with 'arch-anywhere'"

menu0="Re-Set Locale"

menu1="Re-Set Timezone"

menu2="Re-Set Keymap"

menu3="Partition Drive"

menu4="Update Mirror list"

menu5="Install Base System"

menu11="Reboot System"

menu12="Exit Installer"

menu13="Command Line Session"

menu_err_msg3="Drive already mounted, ready to install system. \n\n $a Are you sure you want to return to partition menu?"

menu_err_msg4="System installed \n\n Exiting arch installer..."

menu_exit_msg="System not installed yet... \n\n Are you sure you want to exit?"

aar_add_msg="Would you like to add the Arch Anywhere custom repository to your pacman.conf? \n\n * Adds custom package repo"

aar="Arch Anywhere Repository"

aar_msg="AAR Software =>"

audio="Audio"

audio_msg="Audio Software =>"

graphic="Graphics"

graphic_msg="Graphics Software =>"

internet="Internet"

internet_msg="Internet Software =>"

multimedia="Multimedia"

multimedia_msg="Multimedia Software =>"

office="Office"

office_msg="Office Software =>"

terminal="Terminal"

terminal_msg="Terminal Emulators =>"

text_editor="Text Editors"

text_editor_msg="Text Editing Software =>"

system="System"

system_msg="System Utilities =>"

games="Games"

games_msg="Linux Games =>"

reboot0="Reboot System"

reboot1="Return To Command Prompt"

reboot2="Arch-Chroot Into Installed System"

reboot3="Add New User Account"

reboot5="Install Additional Software"

reboot6="Power Off System"

}

op_msg() {

welcome_op_msg=" -| Arch Linux Anywhere |- "

connection_op_msg=" -| Check Connection |- "

locale_op_msg=" -| Set Locale |- "

zone_op_msg=" -| Set Timezone |- "

key_op_msg=" -| Set Keymap |- "

part_op_msg=" -| Partition Drive |- "

partload_op_msg=" -| Partitioning Drive |- "

manual_op_msg=" -| Partition Menu |- "

edit_op_msg=" -| Edit Partition |- "

mirror_op_msg=" -| Update Mirrorlist |- "

install_op_msg=" -| Install System |- "

config_op_msg=" -| Configure System |- "

host_op_msg=" -| Set Hostname |- "

passwd_op_msg=" -| Set Password |- "

user_op_msg=" -| Add User |- "

de_op_msg=" -| Install Desktop |- "

software_op_msg=" -| Install Software |- "

complete_op_msg=" -| Install Complete |- "

menu_op_msg=" -| Main Menu |- "

}

var_msg() {

drive_var="WARNING! Will erase all data on drive! \n\n $a Location: /dev/$DRIVE \n $a Size: $drive_gigs GiB \n $a Filesystem: $FS \n $a Would you like to continue?"

drive_var1="WARNING! Will erase all data on drive! \n\n $a Location: /dev/$DRIVE \n $a Size: $drive_gigs GiB \n $a Filesystem: $FS \n $a Swap space: $SWAPSPACE \n $a Would you like to continue?"

drive_var2="WARNING! Will erase all data on drive! \n\n $a Location: /dev/$DRIVE \n $a Size: $drive_gigs GiB \n $a Filesystem: $FS \n $a Swap space $SWAPSPACE \n $a Boot: UEFI \n $a Would you like to continue?"

drive_var3="WARNING! Will erase all data on drive! \n\n $a Location: /dev/$DRIVE \n $a Size: $drive_gigs GiB \n $a Filesystem: $FS \n $a Boot: UEFI \n $a Would you like to continue?"

encrypt_var0="Warning this will encrypt /dev/$DRIVE! \n\n $a Continue?"

encrypt_var1="\nPlease enter a new password for /dev/$DRIVE \n\n $a Note this password is used to unencrypt your drive at boot"

encrypt_var2="\nNew /dev/$DRIVE password again. \n\n $a Encryption password again:"

root_var="Create a new root mountpoint: \n $a Note: Root mountpoint must be created first. \n\n $a Partition: /dev/$part \n $a Size: $part_size \n\n Create new root mountpoint?"

manual_part_var0="Partition already mounted. \n\n $a Mountpoint: $part_mount \n $a Partition: /dev/$part \n $a Size: $part_size\n\n Edit to create new mountpoint"

manual_part_var1="Would you like to unmount partition: /dev/$part and remove $part_mount mountpoint? \n\n $a Note will unmount all partitions mounted under"

manual_part_var2="Warning: partition: /dev/$part is set as your root filesystem, this will erase all mountpoint under it. \n\n $a Are you sure you want to continue?"

manual_part_var3="Would you like to edit the partition scheme now? \n\n $a Drive: /dev/$manual_part \n $a Size: $part_size \n\n Edit partition scheme? -Dont forget to 'write' changes"

manual_new_part_var="Would you like to create a new mountpoint? \n\n $a Partition: /dev/$part \n $a Size: $part_size \n\n Edit to create new mountpoint"

manual_swap_var="Would you like to remove SWAP filesystem from /dev/$part? \n\n $a Select 'yes' to remove SWAP filesystem."

mount_warn_var="Warning: disk /dev/$manual_part contains mounted partitions. \n\n $a Would you like to unmount and edit partition scheme?"

mnt_var0="Select a new mount point for /dev/$part: \n\n $a Select 'custom' to create new mountpoint"

fs_err_var="$error A seperate '/boot' partition must be setup when using an $FS filesystem. \n\n $a Returning to partition menu..."

install_var="Begin installing Arch Linux base system onto /dev/$DRIVE?\n\n $a Download size: $software_size \n $a Estimated install time: $down_min minutes.\n $a Estimated speed: $connection_speed $connection_rate \n $a Packages to add: \n\n$base_install"

user_var0="\nPlease enter a new login password for $user \n\n  $a New password for $user:"

user_var1="\nEnter new password for $user again \n\n $a $user password again:"

sudo_var="Enable sudo privilege for $user? \n\n $a Enables administrative privilege for $user."

root_confirm_var="Confirm creating mountpoint? \n\n $a Mountpoint: '/' Root File System \n $a Partition: /dev/$part \n $a Size: $part_size \n $a Filesystem: $FS \n\n Write changes to disk?"

part_confirm_var="Confirm creating mountpoint? \n\n $a Mountpoint: $mnt \n $a Partition: /dev/$part \n $a Size: $part_size \n $a Filesystem: $FS \n\n Write changes to disk?"

software_confirm_var0="Add the following packages to install list? \n\n $a Number of packages: $software_int \n $a Download size: $software_size \n $a Packages to add: \n\n$software_list"

software_confirm_var1="Proceed with installing software? \n\n $a Number of packages: $software_int \n $a Total download size: $software_size \n $a Estimated install time: $down_min minutes \n $a Estimated speed: $connection_speed $connection_rate \n $a Packages to install: \n\n$download_list"

efi_var="A mounted EFI system has been detected at $esp_part \n\n $a Would you like to enable EFI boot?"

vfat_var="The EFI system mounted at $esp_part does not contain a valid vfat filesystem. \n\n $a Would you like to format and create new vfat system?"

efi_mnt_var="The EFI partition detected at $esp_part has not been mounted. \n\n Mount EFI boot partition now?"

f2_err_var="$error You must create a separate boot partition in order to use an $FS filesystem. \n\n $a Returning to partition menu..."

}

load_var_msg() {

load_var0="Partitioning /dev/$DRIVE..."

load_var1="Please wait while creating $FS filesystem..."

install_load_var="$h\nInstalling Arch Linux to: /dev/$DRIVE \n\n $a Download size: $software_size"

software_load_var="$h\nInstalling additional software \n\n $a Download size: $software_size"

locale_load_var="Generating $LOCALE locale..."

zone_load_var="Setting timezone $ZONE..."

}

#####################################################################
### END TRANSLATION ##################################################
### DO NOT EDIT BELOW THIS LINE! ########################################
####################################################################
a="\Z2*\Zn"
h="\Z2<\Z1#\Z2>\Zn"

if "$reload" ; then
	var_msg
	load_var_msg
else
	main_msg
	load_msg
	part_msg
	fs_msg
	graphics_msg
	menu_msg
	op_msg
fi
